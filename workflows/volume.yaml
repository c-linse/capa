apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: volumes-pvc-
  namespace: argo
spec:
  entrypoint: volumes-pvc-example
  volumeClaimTemplates:                 # define volume, same syntax as k8s Pod spec
    - metadata:
        name: workdir                     # name of volume claim
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi                  # Gi => 1024 * 1024 * 1024

  templates:
    - name: volumes-pvc-example
      steps:
        - - name: generate
            template: hello-world-to-file
        - - name: print
            template: print-message-from-file

    - name: hello-world-to-file
      container:
        image: busybox
        command: [sh, -c]
        args: ["echo generating message in volume; echo hello world | tee /mnt/vol/hello_world.txt"]
        # Mount workdir volume at /mnt/vol before invoking the container
        volumeMounts:                     # same syntax as k8s Pod spec
          - name: workdir
            mountPath: /mnt/vol

    - name: print-message-from-file
      container:
        image: alpine:latest
        command: [sh, -c]
        args: ["echo getting message from volume; find /mnt/vol; cat /mnt/vol/hello_world.txt"]
        # Mount workdir volume at /mnt/vol before invoking the container
        volumeMounts:                     # same syntax as k8s Pod spec
          - name: workdir
            mountPath: /mnt/vol
